{"version":3,"sources":["components/SocialProfile/default.jpg","components/SocialProfile/profile.styled.jsx","components/SocialProfile/profile.jsx","components/container/container.styled.jsx","components/container/container.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Friends/friends.styled.jsx","components/Friends/friendsItem.jsx","components/Friends/friendsList.jsx","components/TransactionHistory/TransactionHistory.styled.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.js","index.js"],"names":["Card","styled","div","Description","Avatar","img","Name","p","Tag","Location","StatsList","ul","StatItem","li","Label","span","Quantity","SocialProfile","name","tag","location","avatar","defaultImage","stats","followers","views","likes","src","alt","Container","HighestContainer","children","Section","section","StatisticsList","StatisticsTitle","h2","Item","Percentage","Statistics","title","console","log","map","item","label","percentage","id","List","Status","props","isOnline","FriendListItem","width","FriendList","friends","Table","table","TableHead","thead","Tbody","tbody","Tr","tr","Td","td","TransactionHistory","transactions","type","amount","currency","App","user","statisticalData","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.a29c838f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import styled from \"@emotion/styled\";\n\nconst Card = styled.div`\n  width: 250px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: #ffffff;\n  box-shadow: 0 0 2px 1px rgba(128, 128, 128, 0.2);\n  font-family: Roboto, sans-serif;\n`;\n\nconst Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 32px;\n`;\n\nconst Avatar = styled.img`\n  margin-bottom: 24px;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  border: 1px solid grey;\n`;\n\nconst Name = styled.p`\n  color: #000000;\n  font-size: 18px;\n  font-weight: 700;\n  margin: 0 0 10px;\n`;\n\nconst Tag = styled.p`\n  margin: 0 0 10px;\n  font-size: 14px;\n  color: #a1abb6;\n`;\n\nconst Location = styled.p`\n  margin: 0;\n  font-size: 14px;\n  color: #a1abb6;\n`;\n\nconst StatsList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  background-color: #f3f6f8;\n`;\n\nconst StatItem = styled.li`\n  width: 100%;\n  padding: 15px 5px;\n  border: 1px solid #e4e9f0;\n`;\n\nconst Label = styled.span`\n  display: block;\n  font-size: 14px;\n  color: #a1abb6;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst Quantity = styled.span`\n  display: block;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 700;\n`;\n\nexport {\n  Card,\n  Description,\n  Avatar,\n  StatsList,\n  Name,\n  Tag,\n  Location,\n  StatItem,\n  Label,\n  Quantity,\n};\n","import PropTypes from \"prop-types\";\nimport defaultImage from \"./default.jpg\";\nimport {\n  Card,\n  Description,\n  Avatar,\n  StatsList,\n  Name,\n  Tag,\n  Location,\n  StatItem,\n  Label,\n  Quantity,\n} from \"./profile.styled.jsx\";\n\nfunction SocialProfile({\n  name = \"неизвестено\",\n  tag = \"неизвестено\",\n  location = \"неизвестено\",\n  avatar = defaultImage,\n  stats: {\n    followers = \"неизвестено\",\n    views = \"неизвестено\",\n    likes = \"неизвестено\",\n  },\n}) {\n  return (\n    <Card>\n      <Description>\n        <Avatar src={avatar} alt={name} />\n        <Name>{name}</Name>\n        <Tag>@{tag}</Tag>\n        <Location>{location}</Location>\n      </Description>\n\n      <StatsList>\n        <StatItem>\n          <Label>Followers</Label>\n          <Quantity>{followers}</Quantity>\n        </StatItem>\n        <StatItem>\n          <Label>Views</Label>\n          <Quantity>{views}</Quantity>\n        </StatItem>\n        <StatItem>\n          <Label>Likes</Label>\n          <Quantity>{likes}</Quantity>\n        </StatItem>\n      </StatsList>\n    </Card>\n  );\n}\n\nSocialProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default SocialProfile;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: block;\n  align-items: start;\n  gap: 30px;\n  min-height: 100vh;\n  padding: 90px;\n  background-color: #e7ecf2;\n`;\n","import { Container } from \"./container.styled\";\n\nexport function HighestContainer({ children }) {\n  return <Container>{children}</Container>;\n}\n","import styled from \"@emotion/styled\";\n\nconst Section = styled.section`\n  border-radius: 5px;\n  display: inline-block;\n  overflow: hidden;\n  background-color: #ffffff;\n  box-shadow: 0 0 2px 1px rgba(128, 128, 128, 0.2);\n  font-family: Roboto, sans-serif;\n  margin-top: 100px;\n`;\n\nconst StatisticsList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  background-color: #f3f6f8;\n`;\n\nconst StatisticsTitle = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n  margin: 0;\n  max-width: 100%;\n  padding: 30px 80px;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 64px;\n  padding: 15px 5px;\n  color: white;\n  &:nth-of-type(4n + 1) {\n    background-color: #50c4f3;\n  }\n  &:nth-of-type(4n + 2) {\n    background-color: #a43cf3;\n  }\n  &:nth-of-type(4n + 3) {\n    background-color: #e64c66;\n  }\n  &:nth-of-type(4n + 4) {\n    background-color: #20b8c5;\n  }\n`;\n\nconst Label = styled.span`\n  text-align: center;\n  margin-bottom: 10px;\n  font-size: 12px;\n`;\n\nconst Percentage = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport { Section, StatisticsList, StatisticsTitle, Item, Label, Percentage };\n","import PropTypes from \"prop-types\";\nimport {\n  Section,\n  StatisticsList,\n  StatisticsTitle,\n  Item,\n  Label,\n  Percentage,\n} from \"./Statistics.styled.jsx\";\n\nfunction Statistics({ title, stats }) {\n  console.log(stats);\n  return (\n    <Section>\n      <StatisticsTitle>{title}</StatisticsTitle>\n\n      <StatisticsList>\n        {stats.map((item) => {\n          return (\n            <Item key={item.id}>\n              <Label>{item.label}</Label>\n              <Percentage>{item.percentage}%</Percentage>\n            </Item>\n          );\n        })}\n      </StatisticsList>\n    </Section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n","import styled from \"@emotion/styled\";\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 0;\n  list-style: none;\n  margin-top: 100px;\n  padding: 0;\n  background-color: #f3f6f8;\n  width: 450px;\n  gap: 14px;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 400px;\n  min-height: 110px;\n  padding: 8px 16px;\n  background-color: #f3f6f8;\n  box-shadow: 0 2px 3px 3px rgba(128, 128, 128, 0.2);\n`;\n\nconst Status = styled.span`\n  display: flex;\n  margin: 0;\n  padding: 0;\n  background-color: ${(props) => {\n    if (props.isOnline) {\n      return \"green\";\n    }\n    return \"red\";\n  }};\n\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  margin-right: 15px;\n`;\n\nconst Avatar = styled.img`\n  width: 88px;\n  height: 88px;\n  border-radius: 8px;\n  margin-right: 15px;\n`;\n\nconst Name = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport { List, Item, Status, Avatar, Name };\n","import PropTypes from \"prop-types\";\nimport { Status, Avatar, Name } from \"./friends.styled.jsx\";\n\nfunction FriendListItem({ isOnline, avatar, name }) {\n  return (\n    <>\n      <Status isOnline={isOnline} />\n      <Avatar src={avatar} alt={name} width=\"48\" />\n      <Name>{name}</Name>\n    </>\n  );\n}\n\nFriendListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  status: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from \"prop-types\";\nimport { List, Item } from \"./friends.styled.jsx\";\nimport FriendListItem from \"./friendsItem.jsx\";\n\nfunction FriendList({ friends }) {\n  return (\n    <List>\n      {friends.map((item) => {\n        const { name, avatar, isOnline, id } = item;\n\n        return (\n          <Item key={id}>\n            <FriendListItem name={name} avatar={avatar} isOnline={isOnline} />\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      avatar: PropTypes.string,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import styled from \"@emotion/styled\";\n\nconst Table = styled.table`\n  margin-top: 100px;\n\n  width: 800px;\n  border-collapse: collapse;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 1px 2px 3px 2px rgba(128, 128, 128, 0.3);\n`;\n\nconst TableHead = styled.thead`\n  color: white;\n  text-transform: uppercase;\n\n  & th {\n    border: 1px solid #ffdeff;\n    padding: 20px;\n    background-color: #00bcd5;\n  }\n`;\nconst Tbody = styled.tbody`\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nconst Tr = styled.tr`\n  background-color: white;\n  &:nth-child(2n) {\n    background-color: #ecf1f4;\n  }\n`;\n\nconst Td = styled.td`\n  padding: 20px;\n  text-align: center;\n  border: 1px solid #e4e9f0;\n`;\n\nexport { Table, TableHead, Tbody, Tr, Td };\n","import PropTypes from \"prop-types\";\nimport {\n  Table,\n  TableHead,\n  Tbody,\n  Tr,\n  Td,\n} from \"./TransactionHistory.styled.jsx\";\n\nfunction TransactionHistory({ transactions }) {\n  return (\n    <Table>\n      <TableHead>\n        <Tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </Tr>\n      </TableHead>\n\n      <Tbody>\n        {transactions.map((item) => {\n          return (\n            <Tr key={item.id}>\n              <Td>{item.type}</Td>\n              <Td>{item.amount}</Td>\n              <Td>{item.currency}</Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </Table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","import SocialProfile from \"./SocialProfile/profile.jsx\";\nimport user from \"./SocialProfile/user.json\";\nimport { HighestContainer } from \"./container/container.jsx\";\nimport Statistics from \"./Statistics/Statistics.jsx\";\nimport statisticalData from \"./Statistics/statistical-data.json\";\nimport FriendList from \"./Friends/friendsList.jsx\";\nimport friends from \"./Friends/friends.json\";\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory.jsx\";\nimport transactions from \"./TransactionHistory/transactions.json\";\n\nfunction App() {\n  return (\n    <HighestContainer>\n      <SocialProfile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </HighestContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}